<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artist Endpoint on Music Database</title>
    <link>http://music.loverad.io/api/artists/</link>
    <description>Recent content in Artist Endpoint on Music Database</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jan 2000 00:00:00 +0000</lastBuildDate><atom:link href="http://music.loverad.io/api/artists/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Artist Create</title>
      <link>http://music.loverad.io/api/artists/artist_create/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate>
      
      <guid>http://music.loverad.io/api/artists/artist_create/</guid>
      <description>Create a new Artist with Sub-Artists.
POST /api/artists As you see, you are able to nest sub-artists on this Endpoint. The API will create all nested relations by itself.
{ &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;members&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Anthony Kiedis&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;Michael „Flea“ Balzary&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;Chad Smith&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;John Frusciante&amp;#34; } ] } Example Response Body:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  { &amp;#34;id&amp;#34;: &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34;, &amp;#34;members&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;b878ddf3-8c9e-42d5-8c73-bd7f2fd5e530&amp;#34;, &amp;#34;members&amp;#34;: null, &amp;#34;albums&amp;#34;: null, &amp;#34;ipi&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isni&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Anthony Kiedis&amp;#34;, &amp;#34;sortName&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-08T12:29:17.</description>
    </item>
    
    <item>
      <title>Artist Delete</title>
      <link>http://music.loverad.io/api/artists/artist_delete/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate>
      
      <guid>http://music.loverad.io/api/artists/artist_delete/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Artist Find</title>
      <link>http://music.loverad.io/api/artists/artist_find/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate>
      
      <guid>http://music.loverad.io/api/artists/artist_find/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Artist List</title>
      <link>http://music.loverad.io/api/artists/artist_list/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate>
      
      <guid>http://music.loverad.io/api/artists/artist_list/</guid>
      <description>Lists all Artists
GET /api/artists Example Response Body:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  [ { &amp;#34;id&amp;#34;: &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34;, &amp;#34;members&amp;#34;: null, &amp;#34;albums&amp;#34;: null, &amp;#34;ipi&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isni&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;sortName&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-08T12:29:17.</description>
    </item>
    
    <item>
      <title>Artist Update</title>
      <link>http://music.loverad.io/api/artists/artist_update/</link>
      <pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate>
      
      <guid>http://music.loverad.io/api/artists/artist_update/</guid>
      <description>Update an Artist
 PATCH /api/artists/{id} @TODO: Write documentation</description>
    </item>
    
  </channel>
</rss>
