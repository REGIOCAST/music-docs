<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Music Database</title><link>https://regiocast.github.io/music-docs/</link><description>Recent content on Music Database</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Jan 2000 00:00:00 +0000</lastBuildDate><atom:link href="https://regiocast.github.io/music-docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://regiocast.github.io/music-docs/api/overview/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0000</pubDate><guid>https://regiocast.github.io/music-docs/api/overview/</guid><description>Music provides a comprehensive remote API for interacting with the server. This section of the documents provides instructions for using the API.</description></item><item><title>Album Attach Artist</title><link>https://regiocast.github.io/music-docs/api/albums/album_attach_artist/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_attach_artist/</guid><description>Attach an Artist to given Album.
POST /api/albums/{albumid}/artists Example Body Params:
{ &amp;#34;artists&amp;#34;: [ &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34; ] } Response is 204 NoContent</description></item><item><title>Album Attach Song</title><link>https://regiocast.github.io/music-docs/api/albums/album_attach_song/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_attach_song/</guid><description>Attach a Song to given Album.
POST /api/albums/{albumid}/songs You can use SongId to attach a single song or songs to attach many songs.
{ &amp;#34;songId&amp;#34;: &amp;#34;823a18d1-6203-4e64-b16a-de2ae6876d62&amp;#34;, &amp;#34;songs&amp;#34;: [&amp;#34;823a18d1-6203-4e64-b16a-de2ae6876d62&amp;#34;] } Response is 204 NoContent</description></item><item><title>Album Create</title><link>https://regiocast.github.io/music-docs/api/albums/album_create/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_create/</guid><description>Create a new Album.
Creates a album: POST /api/albums Example Body Params:
{ &amp;#34;name&amp;#34;: &amp;#34;One Hot Minute 2&amp;#34;, &amp;#34;recordLabel&amp;#34;: &amp;#34;Warner Bros.&amp;#34; } Example Response Body:
1 2 3 4 5 6 7 8 9 10 11 { &amp;#34;id&amp;#34;: &amp;#34;b1af16e3-4cad-4a81-a35a-9c6208f57195&amp;#34;, &amp;#34;copyright&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isComplete&amp;#34;: false, &amp;#34;isSingle&amp;#34;: false, &amp;#34;name&amp;#34;: &amp;#34;One Hot Minute 2&amp;#34;, &amp;#34;recordLabel&amp;#34;: &amp;#34;Warner Bros.&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;0001-01-01T00:00:00Z&amp;#34;, &amp;#34;trackCount&amp;#34;: 0, &amp;#34;tracks&amp;#34;: null }</description></item><item><title>Album Delete</title><link>https://regiocast.github.io/music-docs/api/albums/album_delete/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_delete/</guid><description>Delete one Album
DELETE /api/albums/{id}</description></item><item><title>Album Detach Artist</title><link>https://regiocast.github.io/music-docs/api/albums/album_detach_artist/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_detach_artist/</guid><description>Detach an Artist from given Album.
DELETE /api/albums/{albumid}/artists Example Body Params:
{ &amp;#34;artists&amp;#34;: [ &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34; ] } Response is 204 NoContent</description></item><item><title>Album Detach Song</title><link>https://regiocast.github.io/music-docs/api/albums/album_detach_song/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_detach_song/</guid><description>Detach a Song from given Album.
DELETE /api/albums/{albumid}/songs Example Body Params:
{ &amp;#34;songs&amp;#34;: [ &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34; ] } Response is 204 NoContent</description></item><item><title>Album Find</title><link>https://regiocast.github.io/music-docs/api/albums/album_find/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_find/</guid><description>Find one Album
GET /api/albums/{id} Response
{ &amp;#34;id&amp;#34;: &amp;#34;7833d476-d89b-48d8-b232-dd3db7013391&amp;#34;, &amp;#34;copyright&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isComplete&amp;#34;: false, &amp;#34;isSingle&amp;#34;: false, &amp;#34;name&amp;#34;: &amp;#34;One Hot Minute&amp;#34;, &amp;#34;recordLabel&amp;#34;: &amp;#34;Warner Bros.&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;0001-01-01T00:00:00Z&amp;#34;, &amp;#34;trackCount&amp;#34;: 0, &amp;#34;tracks&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;823a18d1-6203-4e64-b16a-de2ae6876d62&amp;#34;, &amp;#34;composerName&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31Z&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1, &amp;#34;albumId&amp;#34;: &amp;#34;7833d476-d89b-48d8-b232-dd3db7013391&amp;#34;, &amp;#34;album&amp;#34;: null, &amp;#34;scheduleInfo&amp;#34;: null, &amp;#34;libraryInfo&amp;#34;: null, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-07T16:40:05.53642+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-07T16:40:05.53642+02:00&amp;#34; } ] }</description></item><item><title>Album List</title><link>https://regiocast.github.io/music-docs/api/albums/album_list/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/albums/album_list/</guid><description>Lists all Albums
GET /api/albums Example Response Body:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 [ { &amp;#34;id&amp;#34;: &amp;#34;7833d476-d89b-48d8-b232-dd3db7013391&amp;#34;, &amp;#34;artists&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34;, &amp;#34;members&amp;#34;: null, &amp;#34;albums&amp;#34;: null, &amp;#34;ipi&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isni&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;sortName&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-08T12:29:17.</description></item><item><title>Artist Create</title><link>https://regiocast.github.io/music-docs/api/artists/artist_create/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artists/artist_create/</guid><description>Create a new Artist.
POST /api/artists Request
{ &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, } Response
{ &amp;#34;id&amp;#34;: &amp;#34;33244a4b-dfc5-4317-9039-d2cebfb12782&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213112+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.214982+02:00&amp;#34; } This Query will just create a new Artist (Band), but sometimes you want to create the entire band at once. You can use Upsert for this.
All Band members will be created and the relations will be auto-generated. Example:
Request
{ &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;members&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Anthony Kiedis&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;Michael „Flea“ Balzary&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;Chad Smith&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;John Frusciante&amp;#34; } ] } Response</description></item><item><title>Artist Delete</title><link>https://regiocast.github.io/music-docs/api/artists/artist_delete/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artists/artist_delete/</guid><description/></item><item><title>Artist Find</title><link>https://regiocast.github.io/music-docs/api/artists/artist_find/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artists/artist_find/</guid><description>Find Artist by ID
GET /api/artists/{id} By default all members of an artist are preloaded.
{ &amp;#34;id&amp;#34;: &amp;#34;33244a4b-dfc5-4317-9039-d2cebfb12782&amp;#34;, &amp;#34;members&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;0ba86437-61bf-4f25-905a-526a76cb09a4&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Michael „Flea“ Balzary&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;13d2f8a6-4f5d-45c6-b10c-3309f26fdf63&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Chad Smith&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;1d1809df-cf05-4604-97e8-6ff3de542f6a&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Michael „Flea“ Balzary&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;3a456127-df78-4d7d-902f-b66b86fb9c44&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Anthony Kiedis&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.213784+02:00&amp;#34; }, { &amp;#34;id&amp;#34;: &amp;#34;609daad8-4052-4173-840c-1e72cc87d180&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Chad Smith&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T13:32:24.</description></item><item><title>Artist List</title><link>https://regiocast.github.io/music-docs/api/artists/artist_list/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artists/artist_list/</guid><description>Lists all Artists
GET /api/artists Example Response Body:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 [ { &amp;#34;id&amp;#34;: &amp;#34;1607d150-861c-4782-8c1b-abe58254373b&amp;#34;, &amp;#34;members&amp;#34;: null, &amp;#34;albums&amp;#34;: null, &amp;#34;ipi&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isni&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;sortName&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-08T12:29:17.</description></item><item><title>Artist Update</title><link>https://regiocast.github.io/music-docs/api/artists/artist_update/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artists/artist_update/</guid><description>Update an Artist
PATCH /api/artists/{id} @TODO: Write documentation</description></item><item><title>Artwork Create</title><link>https://regiocast.github.io/music-docs/api/artworks/artwork_create/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/artworks/artwork_create/</guid><description>Create a new Artwork.
*POST* /api/artworks Allows to Upload a Artwork to the Service. Request has to be a multipart/form-data req.
form-data:
file the actual file alt alt name of the file Note: Filenames are URI encoded by default, to reduce possible user mistakes.
Response
{ &amp;#34;id&amp;#34;: &amp;#34;f7640b4e-7391-43cc-ae86-716c04d15b01&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Screenshot 2020-10-07 at 09.23.53.png&amp;#34;, &amp;#34;mimeType&amp;#34;: &amp;#34;image/png&amp;#34;, &amp;#34;size&amp;#34;: 4759480, &amp;#34;bucket&amp;#34;: &amp;#34;storage.delivc.com&amp;#34;, &amp;#34;publicPath&amp;#34;: &amp;#34;https://s3-eu-west-1.amazonaws.com/storage.delivc.com/1iYCDvVAta4SHdQlgi9Ty1nyqoR/Screenshot_2020-10-07_at_09.23.53.png&amp;#34;, &amp;#34;alt&amp;#34;: &amp;#34;lalaland&amp;#34;, &amp;#34;width&amp;#34;: 2880, &amp;#34;height&amp;#34;: 1800, &amp;#34;isAnimated&amp;#34;: false, &amp;#34;duration&amp;#34;: 0, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-07T14:50:23.</description></item><item><title>Song Create</title><link>https://regiocast.github.io/music-docs/api/songs/song_create/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/songs/song_create/</guid><description>Create a new Song.
POST /api/songs Request
{ &amp;#34;composerName&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31+00:00&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1 } Response
{ &amp;#34;id&amp;#34;: &amp;#34;b38db132-c4b7-4123-8107-abbb88b7d921&amp;#34;, &amp;#34;composerName&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31Z&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1, &amp;#34;albumId&amp;#34;: &amp;#34;00000000-0000-0000-0000-000000000000&amp;#34;, &amp;#34;album&amp;#34;: null, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T12:32:58.473323+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T12:32:58.473323+02:00&amp;#34; }</description></item><item><title>Song Delete</title><link>https://regiocast.github.io/music-docs/api/songs/song_delete/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/songs/song_delete/</guid><description>Deletes a song by it&amp;rsquo;s ID
DELETE /api/songs/{id} Returns 204 No Content</description></item><item><title>Song Find</title><link>https://regiocast.github.io/music-docs/api/songs/song_find/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/songs/song_find/</guid><description>Find Song by ID
GET /api/songs/{id} Finds a song by it&amp;rsquo;s ID. Album is always eager loaded.
{ &amp;#34;id&amp;#34;: &amp;#34;701fedca-2754-45d9-97d1-74e8bdaee383&amp;#34;, &amp;#34;composerName&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31Z&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1, &amp;#34;albumId&amp;#34;: &amp;#34;8d59b381-484e-421e-99d0-1e331f1f810f&amp;#34;, &amp;#34;album&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;8d59b381-484e-421e-99d0-1e331f1f810f&amp;#34;, &amp;#34;copyright&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;isComplete&amp;#34;: false, &amp;#34;isSingle&amp;#34;: false, &amp;#34;name&amp;#34;: &amp;#34;One Hot Minute&amp;#34;, &amp;#34;recordLabel&amp;#34;: &amp;#34;Warner Bros.&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;0001-01-01T00:00:00Z&amp;#34;, &amp;#34;trackCount&amp;#34;: 0, &amp;#34;tracks&amp;#34;: null }, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T12:41:06.709927+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T12:41:06.709927+02:00&amp;#34; }</description></item><item><title>Song List</title><link>https://regiocast.github.io/music-docs/api/songs/song_list/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/songs/song_list/</guid><description>Lists all Songs
GET /api/songs [ { &amp;#34;id&amp;#34;: &amp;#34;b38db132-c4b7-4123-8107-abbb88b7d921&amp;#34;, &amp;#34;composerName&amp;#34;: &amp;#34;Red Hot Chili Peppers&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31Z&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1, &amp;#34;albumId&amp;#34;: &amp;#34;00000000-0000-0000-0000-000000000000&amp;#34;, &amp;#34;album&amp;#34;: null, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T12:32:58.473323+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T12:32:58.473323+02:00&amp;#34; } ]</description></item><item><title>Song Update</title><link>https://regiocast.github.io/music-docs/api/songs/song_update/</link><pubDate>Sat, 01 Jan 2000 00:00:00 +0002</pubDate><guid>https://regiocast.github.io/music-docs/api/songs/song_update/</guid><description>Update an Song
PATCH /api/songs/{id} Request
{ &amp;#34;composerName&amp;#34;: &amp;#34;updated ComposerName&amp;#34; } Response
{ &amp;#34;id&amp;#34;: &amp;#34;b38db132-c4b7-4123-8107-abbb88b7d921&amp;#34;, &amp;#34;composerName&amp;#34;: &amp;#34;updated ComposerName&amp;#34;, &amp;#34;discNumber&amp;#34;: 1, &amp;#34;durationInMillis&amp;#34;: 20000, &amp;#34;isrc&amp;#34;: &amp;#34;USQY51021557&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Aeroplane&amp;#34;, &amp;#34;releaseDate&amp;#34;: &amp;#34;1996-03-14T10:27:31Z&amp;#34;, &amp;#34;trackNumber&amp;#34;: 1, &amp;#34;albumId&amp;#34;: &amp;#34;00000000-0000-0000-0000-000000000000&amp;#34;, &amp;#34;album&amp;#34;: null, &amp;#34;createdAt&amp;#34;: &amp;#34;2020-10-06T12:32:58.473323+02:00&amp;#34;, &amp;#34;updatedAt&amp;#34;: &amp;#34;2020-10-06T12:35:17.546596+02:00&amp;#34; }</description></item></channel></rss>